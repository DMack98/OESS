#!/usr/bin/perl

use strict;
use warnings;

use OESS::Database;


sub main{
    my $option = shift;

    if($option eq 'stop'){
        exit(stop());
    }elsif($option eq 'start'){
        exit(start());
    }elsif($option eq 'status'){
        my $status = status();
        exit($status);
    }elsif($option eq 'validate-all'){
        my $status = status();
        exit($status);
    }elsif($option eq 'restart'){
        my $res1 = stop();
        my $res2 = start();
        exit($res2);
    }elsif($option eq 'monitor'){
        my $status = status();
        if($status == 3){
            exit(7);
        }elsif($status != 0){
            exit(1);
        }else{
            exit(0);
        }            
    }elsif($option eq 'meta-data'){
        my $str = << 'END';
<!DOCTYPE resource-agent SYSTEM "ra-api-1.dtd">
<resource-agent name="OESS" version="0.1">
  <version>1.1.6</version>
  <longdesc lang="en">
This is a Resource Agent for managing OESS and its components
  </longdesc>
  <shortdesc lang="en">This isa Resource Agent for managing OESS and its components</shortdesc>
  <actions>
    <action name="start"        timeout="20" />
    <action name="stop"         timeout="20" />
    <action name="monitor"      timeout="20"
                                interval="10" depth="0" />
    <action name="restart"      timeout="20" />
    <action name="validate-all" timeout="30" />
    <action name="meta-data"    timeout="5" />
  </actions>
</resource-agent>
END
print $str . "\n";
        exit(0);

    }else{
        usage();
    }
    
}

sub status{
    
    my $db = OESS::Database->new();
    my $result = 0;
    if($db->is_topo_enabled()){
        my $res =  system("/etc/init.d/oess-topo status");
        if($res != 0){
            $result = $res;
        }
    }
    if($db->is_vlan_stats_enabled()){
        my $res = system("/etc/init.d/oess-vlan_stats status");
        if($res != 0){
            $result = $res;
        }
    }
    if($db->is_nox_enabled()){
        my $res = system("/etc/init.d/nox_cored status");
        if($res != 0){
            $result = $res;
        }
    }
    if($db->is_fwdctl_enabled()){
        my $res = system("/etc/init.d/oess-fwdctl status");
        if($res != 0){
            $result = $res;
        }
    }
    if($db->is_fvd_enabled()){
        my $res = system("/etc/init.d/oess-fvd status");
        if($res != 0){
            $result = $res;
        }
    }

    if($db->is_notification_enabled()){
        my $res = system("/etc/init.d/oess-notification status");
        if($res != 0){
            $result = $res;
        }
    }

    if($db->is_watchdog_enabled()){
        my $res = system("/etc/init.d/oess-watchdog status");
        if($res != 0){
            $result = $res;
        }
    }

    if($db->is_traceroute_enabled()){
        my $res = system("/etc/init.d/oess-traceroute status");
        if($res != 0){
            $result = $res;
        }
    }

    #cause this is how wait work?
    return $result / 256;

}

sub stop{
    my $db = OESS::Database->new();
    my $result = 0;

    if($db->is_topo_enabled()){
        my $res = system("/etc/init.d/oess-topo stop");
        if($res != 0){
            $result = $res;
        }
    }
    if($db->is_vlan_stats_enabled()){
        my $res = system("/etc/init.d/oess-vlan_stats stop");
        if($res != 0){
            $result = $res;;
        }
    }
    if($db->is_nox_enabled()){
        my $res = system("/etc/init.d/nox_cored stop");
        if($res != 0){
            $result = $res;;
        }
    }
    if($db->is_fwdctl_enabled()){
        my $res = system("/etc/init.d/oess-fwdctl stop");
        if($res != 0){
            $result = $res;;
        }
    }
    if($db->is_fvd_enabled()){
        my $res = system("/etc/init.d/oess-fvd stop");
        if($res != 0){
            $result = $res;;
        }
    }

    if($db->is_notification_enabled()){
        my $res = system("/etc/init.d/oess-notification stop");
        if($res != 0){
            $result = $res;;
        }
    }

    if($db->is_watchdog_enabled()){
        my $res = system("/etc/init.d/oess-watchdog stop");
        if($res != 0){
            $result = $res;;
        }
    }

    if($db->is_traceroute_enabled()){
        my $res = system("/etc/init.d/oess-traceroute stop");
        if($res != 0){
            $result = $res;;
        }
    }

    #cause this is how wait work?
    return $result / 256;


}

sub start{
    my $db = OESS::Database->new();
    
    my $result = 0;

    if($db->is_topo_enabled()){
        my $res = system("/etc/init.d/oess-topo start");
        if($res != 0){
            $result = $res;;
        }
    }
    if($db->is_vlan_stats_enabled()){
        my $res = system("/etc/init.d/oess-vlan_stats start");
        if($res != 0){
            $result = $res;;
        }
    }
    if($db->is_nox_enabled()){
        my $res = system("/etc/init.d/nox_cored start");
        if($res != 0){
            $result = $res;;
        }
    }
    if($db->is_fwdctl_enabled()){
        my $res = system("/etc/init.d/oess-fwdctl start");
        if($res != 0){
            $result = $res;;
        }
    }
    if($db->is_fvd_enabled()){
        my $res = system("/etc/init.d/oess-fvd start");
        if($res != 0){
            $result = $res;;
        }
    }

    if($db->is_notification_enabled()){
        my $res = system("/etc/init.d/oess-notification start");
        if($res != 0){
            $result = $res;;
        }
    }

    if($db->is_watchdog_enabled()){
        my $res = system("/etc/init.d/oess-watchdog start");
        if($res != 0){
            $result = $res;;
        }
    }

    if($db->is_traceroute_enabled()){
        my $res = system("/etc/init.d/oess-traceroute start");
        if($res != 0){
            $result = $res;;
        }
    }
    #cause this is how wait work?
    return $result / 256;
}

sub usage{
    print "Usage: $0 [start|stop|restart|status|monitor|meta-data|validate-all]\n";
    exit(3);
}

my $option = $ARGV[0];

usage() if (!defined($option));

main($option);
