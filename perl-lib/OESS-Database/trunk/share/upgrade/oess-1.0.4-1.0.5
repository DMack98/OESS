#!/usr/bin/perl
#-------------------------------------------------------------------
#----- OESS 1.0.4 - 1.0.5 upgrade module                         
#-----                                                               
#----- Copyright(C) 2010 The Trustees of Indiana University          
#--------------------------------------------------------------------
#----- $HeadURL: $                                                   
#----- $Id: $                                                        
#-----                                                               
#----- This is run when upgrading the database from     
#----- version 1.0.4 to version 1.0.5                                
#-------------------------------------------------------------------- 

use strict;
use warnings;
use OESS::Database;

my $prev_version = "1.0.4";
my $version = "1.0.5";

sub main{

    print "*******************************************************************\n";
    print "*********             OESS DB UPGRADE           ************\n";
    print "*******************************************************************\n";
    print "********* This will upgrade from $prev_version to $version **********\n";
    print "********* of the OESS DB any other version will not work ************\n";
    
    continue_parameter("Do you wish to continue");

    
    my $dbq = new OESS::Database();
    my $current_version = $dbq->get_oess_schema_version();    
    
    if($current_version eq '1.0.3'){
	$dbq->{'dbh'}->begin_work();
	upgrade($dbq->{'dbh'});
	$dbq->{'dbh'}->commit();
    }else{
	print "Wrong version of OESS DB\n";
	print "This script only upgrades from version $prev_version to $version\n";
	exit;
    }
    
    print STDERR "Upgrade Successful!!\n";
    
}


sub upgrade{
    my $dbh = shift;
    my $term = shift;

    ####################################
    #
    # Ask for any new parameters here
    #
    ####################################
    
    
    #################################### 
    #
    # All Changes should happen in here
    #
    ####################################
   
    #add the schema bits to support hairpin circuits ISSUE=4833
    my $str = "alter table circuit_edge_interface_membership drop primary, add primary key (interface_id, circuit_id, end_epoch, extern_vlan_id)";
    my $sth = $dbh->prepare($str);
    $sth->execute();

    $str = "alter table circuit_edge_interface_membership drop key circuit_edge_interface_membership_idx";
    $sth = $dbh->prepare($str);
    $sth->execute();

    ####################################
    #
    # End all changes
    #
    #####################################
    
    #ok done with the rest of the upgrade update our version
    $str = "update oess_version set version = '$version'";
    $sth = $dbh->prepare($str) or die "Unable to prepare version update \n";
    $sth->execute() or die "Unable to update version\n";
}

main();

sub continue_parameter {

    my $name = shift;

    print "$name [y/n]: ";
    my $yes_or_no = <>;
    chomp($yes_or_no);

    exit(0) if ($yes_or_no !~ /y/i || $yes_or_no =~ /n/i);
}
