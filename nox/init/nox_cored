#!/bin/bash
#
# NOX       Startup script for the NOX controller
#
# chkconfig: 2345 81 30
# description: Stars aopenflow controller 
# processname: nox_core

#THIS FILE REQUIRES EDITING FOR CORRECT OPERATION

# Source function library
if [ -f /etc/rc.d/init.d/functions ]; then
. /etc/rc.d/init.d/functions
elif [ -f /etc/init.d/functions ]; then
. /etc/init.d/functions
elif [ -f /etc/rc.d/functions ]; then
. /etc/rc.d/functions
fi

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ ${NETWORKING} = "no" ] && exit 0
name=nox
#base_dir=/CHANGEME/
controller=/usr/bin/nox_core
options=" -d -i ptcp: nddi_dbus  -n /var/log/nox/nox.info"
username=_oess
lockfile=/var/lock/subsys/snapp-$name
command="$controller   $options"
PIDFILE=/var/run/nox/nox.pid
command="$controller  -p $PIDFILE $options"
#echo $command


#set -x

# See how we were called.
case "$1" in
  start)
        #start
        echo -n $"Starting $name Controller: "
#so nox is retarted and writes it PID file even when it fails to start,
#so we need to write a workaround here
	if [ -f $PIDFILE ]; then
		MYPID=`head -n 1 $PIDFILE`
		TEST_RUNNING=`ps -p ${MYPID} | grep ${MYPID}`
		if [ -z ${TEST_RUNNING} ]; then
			echo -n " ready to start"
		else
			echo -n "already running"
			success; echo
			exit 0
		fi
	fi

	cd /usr/bin
        sudo -u $username $command

        if [ $? -eq 0 ]; then
            touch $lockfile
            success; echo
        else
            failure; echo
        fi
        ;;
  stop)
        #stop
        if [ -f $PIDFILE ]; then
                action $"Stopping ${name}: " /bin/true
                kill -TERM `cat $PIDFILE`
                rm -f $PIDFILE
        else
                action $"Stopping ${name}: " /bin/false
        fi
        rm -rf $lockfile
        ;;
  status)
        #snapp -p $base_dir/db/PID $command
        #RETVAL=$?
        #status p0f
	if [ -f $PIDFILE ]; then
		MYPID=`head -n 1 $PIDFILE`
		TEST_RUNNING=`ps -p ${MYPID} | grep ${MYPID}`
		if [ -z ${TEST_RUNNING} ]
		then
			echo "oess-$name (pid `cat $PIDFILE`) is not running (but PID file exists)"
			exit 3
		else
			echo "oess-$name (pid `cat $PIDFILE`) is running"
		fi
	else
		echo "oess-$name is not running"
		exit 3
	fi
	exit $?
	;;


  restart)
        $0 stop
        #wee need to sleep to make sure the deamon has enoth time to shutdown
        sleep 3
        $0 start
        exit $?
        ;;
  reload)
        reload
        ;;
  *)
        echo $"Usage: $0 {start|stop|restart|status|help}"
        exit 1

esac

exit $RETVAL

